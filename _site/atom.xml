<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dskim-blog</title>
    <description>개발 블로그</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <author>
      <name>dskim</name>
      <email>deasung.kim2622@gmail.com</email>
      <uri>https://deasung.github.io</uri>
    </author>
    
      <item>
        <title>AWS -&gt; CodePipeline 셋팅</title>
        <description>&lt;h1 id=&quot;codepipeline&quot;&gt;CodePipeline&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;AWS CodePipeline은 소프트웨어 릴리스에 필요한 단계를 모델링, 시각화 및 자동화하는 데 사용할 수 있는 지속적 전달 서비스입니다. 소프트웨어 릴리스 프로세스를 구성하는 여러 단계를 신속하게 모델링하고 구성할 수 있습니다. CodePipeline은 소프트웨어 변경 내용을 지속적으로 릴리스하는 데 필요한 단계를 자동화합니다 (https://docs.aws.amazon.com/ko_kr/codepipeline/latest/userguide/welcome.html)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;셋팅 하게된 이유 회사에서 젠킨스로 구성되어 있는 부분을 조금씩 아마존 인프라쪽에서 관리하기 위해&lt;/p&gt;

&lt;p&gt;차근차근 정리하면서 옮기는 중..&lt;/p&gt;

&lt;p&gt;이건 셋팅하면서 정리한 내용일뿐입니다.&lt;/p&gt;

&lt;h2 id=&quot;1파이프라인-생성&quot;&gt;1.파이프라인 생성&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/imgs/2020/05/20/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2파이프라인-설정&quot;&gt;2.파이프라인 설정&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;파이프라인 이름을 적어준다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 20 May 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//aws-codepipeline-setting</link>
        <link href="http://localhost:4000/aws-codepipeline-setting"/>
        <guid isPermaLink="true">http://localhost:4000/aws-codepipeline-setting</guid>
      </item>
    
      <item>
        <title>AWS EC2 -&gt; Jupyter 셋팅</title>
        <description>&lt;h1 id=&quot;1설치-명령어&quot;&gt;1.설치 명령어&lt;/h1&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;sudo yum update
python --version
sudo yum install python3
python --version
python3 --version
sudo yum install python3-pip
pip3 --version
history

pip3 install jupyter

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2쥬피터-노트북-config-생성명령어&quot;&gt;2.쥬피터 노트북 config 생성명령어&lt;/h1&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
jupyter notebook --generate-config

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;생성하는 경로에서 .jupyter 디렉토리가 생성됨&lt;/p&gt;

&lt;h1 id=&quot;3python3-접속해서-해쉬-암호-생성&quot;&gt;3.python3 접속해서 해쉬 암호 생성&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; python3

&amp;gt;&amp;gt;&amp;gt; from notebook.auth import passwd
&amp;gt;&amp;gt;&amp;gt; passwd()


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/imgs/2020/05/19/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4jupyter_notebook_configpy-셋팅&quot;&gt;4.jupyter_notebook_config.py 셋팅&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls

cd .jupyter/
ls
jupyter_notebook_config.py -&amp;gt; 생성되었는지 확인 
vi jupyter_notebook_config.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;jupyter_notebook_config.py 파일 마지막줄에&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-sbtshell&quot;&gt;c = get_config()
c.NotebookApp.password = u'해쉬암호'
c.NotebookApp.ip = '내부아이피'
c.NotebookApp.port = 내부포트
c.NotebookApp.notebook_dir = '/home/ec2-user/jupyter'

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;5쥬피터-노트북-실행-명령어&quot;&gt;5.쥬피터 노트북 실행 명령어&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&quot;language-sbtshell&quot;&gt;
jupyter notebook --allow-root

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;6기타-설치-명령어&quot;&gt;6.기타 설치 명령어&lt;/h1&gt;

&lt;p&gt;쥬피터 노트북 이것저것 할때 은근히 설치 해야할 거 
자바는 한글 분석용 konlpy? 이거 쓸때 필요함&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;폰트 셋팅
```sbtshell&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;yum install mkfontscale&lt;/p&gt;

&lt;p&gt;yum install fontconfig&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
- 자바셋팅

```sbtshell

sudo yum install -y java-1.8.0-openjdk-devel.x86_64

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;7쥬피터-노트북-백그라운드-실행모드&quot;&gt;7.쥬피터 노트북 백그라운드 실행모드&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$&amp;gt; nohup jupyter notebook --allow-root &amp;gt; error.log &amp;amp;

$&amp;gt; ps -ef | grep jupyter 

$&amp;gt; kill -9 #{쥬피터 노트북 프로세스 아이디}

$&amp;gt; nohup jupyter notebook --allow-root &amp;gt; error.log &amp;amp; echo $!&amp;gt; pid.txt

$&amp;gt; kill -9 $(cat pid.txt)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 데이터 분석을 열심히 하면됨..&lt;/p&gt;
</description>
        <pubDate>Tue, 19 May 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//aws-ec2-jupyter-setting</link>
        <link href="http://localhost:4000/aws-ec2-jupyter-setting"/>
        <guid isPermaLink="true">http://localhost:4000/aws-ec2-jupyter-setting</guid>
      </item>
    
      <item>
        <title>AWS pipeline -&gt; bitbucket cloud 베타용 연동</title>
        <description>&lt;p&gt;자세한건 공식문서를 읽는게 제일 좋습니다.
AWS pipeline -&amp;gt; bitbucket cloud 베타용 연동용 &lt;a href=&quot;https://aws.amazon.com/ko/about-aws/whats-new/2019/12/aws-codepipeline-now-supports-atlassian-bitbucket-cloud/&quot;&gt;공식문서&lt;/a&gt;
링크입니다.&lt;/p&gt;

&lt;p&gt;최근에 회사 기존 젠킨스 CI랑 Bitbucket Clound Pipeline으로 되어 있는 부분을&lt;/p&gt;

&lt;p&gt;조금씩 AWS CI로 옮기는중에 적는 내용입니다~&lt;/p&gt;

&lt;h1 id=&quot;간단한-정리&quot;&gt;간단한 정리&lt;/h1&gt;

&lt;h2 id=&quot;1정책을-만들어-줍니다&quot;&gt;1.정책을 만들어 줍니다.&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/2020/05/18/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2정책을-json편집기로-입력해준다&quot;&gt;2.정책을 json편집기로 입력해준다.&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/2020/05/18/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;json 파일 내용입니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;Version&quot;: &quot;2012-10-17&quot;,
    &quot;Statement&quot;: [
        {
            &quot;Effect&quot;: &quot;Allow&quot;,
            &quot;Action&quot;: [
                &quot;codestar-connections:CreateConnection&quot;,
                &quot;codestar-connections:DeleteConnection&quot;,
                &quot;codestar-connections:GetConnection&quot;,
                &quot;codestar-connections:ListConnections&quot;,
                &quot;codestar-connections:GetInstallationUrl&quot;,
                &quot;codestar-connections:GetIndividualAccessToken&quot;,
                &quot;codestar-connections:ListInstallationTargets&quot;,
                &quot;codestar-connections:StartOAuthHandshake&quot;,
                &quot;codestar-connections:UpdateConnectionInstallation&quot;,
                &quot;codestar-connections:UseConnection&quot;,
                &quot;codestar-connections:PassConnection&quot;
            ],
            &quot;Resource&quot;: [
                &quot;*&quot;
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3파이프라인-항목으로-이동&quot;&gt;3.파이프라인 항목으로 이동&lt;/h2&gt;
&lt;p&gt;Bitbucket 연결 버튼을 클릭해 줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/2020/05/18/3.png&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4bitbucket-cloud랑-연동&quot;&gt;4.Bitbucket Cloud랑 연동&lt;/h2&gt;
&lt;p&gt;창이 나오는데 연동을 해주면 됩니다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/2020/05/18/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 18 May 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//aws-codepipeline-bitbucket-cloud-connect</link>
        <link href="http://localhost:4000/aws-codepipeline-bitbucket-cloud-connect"/>
        <guid isPermaLink="true">http://localhost:4000/aws-codepipeline-bitbucket-cloud-connect</guid>
      </item>
    
      <item>
        <title>처음배우는 스프링부트2 책을 읽고 요점정리</title>
        <description>&lt;p&gt;스프링부트 프로젝트 의존성&lt;/p&gt;

&lt;p&gt;https://github.com/spring-projects/spring-boot&lt;/p&gt;

&lt;p&gt;application-{profile}.yml {profile}에 원하는 프로파일값으로 YAML 파일을 추가하면&lt;/p&gt;

&lt;p&gt;애플리케이션 실행시 지정한 프로파일값을 바탕으로 실행&lt;/p&gt;

&lt;p&gt;서버에서 실행시&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java -jar ... -D spring.profiles.active=dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;yaml-파일-매핑&quot;&gt;YAML 파일 매핑&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;유연한 바인딩: 프로퍼티값을 객체에 바인딩할 경우 필드를 낙타 표기법(Camel Case)으로 선언 프로퍼티의 키는 다양한 형식(낙타 표기법,케밥 표기법(Kebab Case),언더바 표기법(Underscore) 선언 바인딩&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;메타데이터 지원: 프로터피 키에 대한 정보를 메타데이터 파일(Json) 로 제공&lt;/li&gt;
  &lt;li&gt;SpEL(Spring Expression Language,스프링 표현 언어) 평가: SpEL은 런타임에 객체 참조에 대해 질의하고 조작하는 기능을 지원하는 언어, 특히 메서드 호출 및 기본 문자열 템플릿기능을 제공. @Value만 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;스프링-부트-테스트&quot;&gt;스프링 부트 테스트&lt;/h1&gt;

&lt;h2 id=&quot;datajpatest&quot;&gt;@DataJpaTest&lt;/h2&gt;

&lt;p&gt;JPA 관련 테스트 설정만 로드&lt;/p&gt;

&lt;p&gt;기본적으로 인메모리 임베디드 데이터베이스를 사용&lt;/p&gt;

&lt;p&gt;데이터 소스주입&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.runner.RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.test.context.junit4.SpringRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.test.context.ActiveProfiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@DataJpaTest&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ActiveProfiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@AutoConfigureTestDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AutoConfigureTestDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;@AutoConfigureTestDatabase 어노테이션의 기본 설정값인 Replace.Any를 사용하면 기본적으로 내장된 데이터소스를 사용함 , Replace.NONE으로 설정하면 @ActiveProfiles에 설정한 프로파일 환경값에 따라 데이터소스가 적용됨&lt;/li&gt;
  &lt;li&gt;JPA 테스트가 끝날때마다 자동으로 테스트에 사용한 데이터를 롤백&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;restclienttest&quot;&gt;@RestClientTest&lt;/h1&gt;

&lt;p&gt;REST 관련 테스트를 도와주는 어노테이션&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RestClientTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;BookRestService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookRestTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
  &lt;span class=&quot;nd&quot;&gt;@Rule&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExpectedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thrown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExpectedException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
  &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookRestService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bookRestService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
  &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MockRestServiceServer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rest_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;테스트&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    	
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/rest/test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;andRespond&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withSuccess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ClassPathResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/test.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    	&lt;span class=&quot;n&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()),&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;APPLICATION_JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    
    &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bookRestService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRestBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;테스트&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rest_error_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;테스트&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    		
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/rest/test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;andRespond&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withServerError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thrown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServerErrorException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bookRestService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRestBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;@RestClientTest 는 테스트 대상이 되는 빈을 주입받음&lt;/li&gt;
  &lt;li&gt;@Rule로 지정한 필드값은 @Before나 @After 어노테이션에 상관없이 하나의 테스트 메서드가 끝날때 마다 정의한 값으로 초기화 시켜줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jsontest&quot;&gt;@JsonTest&lt;/h2&gt;

&lt;p&gt;@JsonTest 어노테이션은 JSON의 직렬화(serialization)와 역직렬화(deserialization)을 수행하는 라이브러리인 Gson과 Jackson API의 테스트를 제공함&lt;/p&gt;

&lt;h2 id=&quot;4장-스프링-부트-웹&quot;&gt;4장 스프링 부트 웹&lt;/h2&gt;

&lt;p&gt;스프링이 관리하는 컴포넌트에서 퍼시스턴스 계층에 대해 더 명확하게 특수한 제네릭 스테레오타입을 말함&lt;/p&gt;

&lt;p&gt;퍼시스턴스 계층이란 물리적 저장공간을 뜻함.영속성을 가진 파일이나 DB에 로직을 구현하는 것을 뜻하기도함.&lt;/p&gt;

&lt;p&gt;JPA fetch eager와 lazy 두종류가 있음 eager는 도메인을 조회할때 즉시 관련된 객체도 같이 조회&lt;/p&gt;

&lt;p&gt;lazy는 객체가 실제로 사용될때 조회됨&lt;/p&gt;

&lt;h2 id=&quot;commandlinerunner를-사용하여-db에-데이터-넣기&quot;&gt;CommandLineRunner를 사용하여 DB에 데이터 넣기&lt;/h2&gt;

&lt;p&gt;CommandLineRunner는 애플리케이션 구동 후 특정 코드를 실행시키고 싶을 때 직접 구현하는 인터페이스&lt;/p&gt;

&lt;p&gt;애플리케이션 구동시 테스트 데이터를 함께 생성하여 데모 프로젝트를 실행/테스트하고 싶을때 편리함&lt;/p&gt;

&lt;p&gt;스프링 DI(Dependency Injection) 스프링의 주요 특성 중 하나로 주로 의존 관계 주입&lt;/p&gt;

&lt;p&gt;의존 관계를 주입하는게 아니라 단지 객체의 레퍼런스를 전달하여 참조시킨다는 의미로 의존 관계 설정이라고 함&lt;/p&gt;

&lt;h2 id=&quot;5장-스프링-부트-시큐리티--oauth2&quot;&gt;5장 스프링 부트 시큐리티 + OAuth2&lt;/h2&gt;

&lt;p&gt;스프링 부트 시큐리티에서 가장 중요한 개념은 ‘인증(authentication)’ 과 ‘권한부여(authorization)’&lt;/p&gt;

&lt;p&gt;@NestedConfigurationProperty&lt;/p&gt;

&lt;p&gt;@EnableWebSecurity 어노테이션은 웹에서 시큐리티 기능 사용하겠다는 어노테이션&lt;/p&gt;

&lt;p&gt;스프링부트는 @EnableWebSecurity 자동 설정이 적용됨&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableWebSecurity&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SecurityConfig&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WebSecurityConfigurerAdapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpSecurity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;CharacterEncodingFilter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CharacterEncodingFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    	
    &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;authorizeRequests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//인증 메커니즘 요청 HttpServletRequest 기반으로 설정&lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;antMatchers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/login/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/css/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/images/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/js/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 요청 패턴을 리스트 형식으로 설정 &lt;/span&gt;
    	    &lt;span class=&quot;s&quot;&gt;&quot;/console/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;permitAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//설정한 리퀘스트 패턴 누구나 접근 허용 &lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;anyRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 설정한 요청 이외의 리퀘스트 요청을 표현 &lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;authenticated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 해당 요청은 인증된 사용자만 할수 있음 &lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 응답에 해당하는 header 설정 &lt;/span&gt;
    		&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;frameOptions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// XFrameOptionsHeaderWriter 최적화 설정을 허용안함 &lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exceptionHandling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    		&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;authenticationEntryPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoginUrlAuthenticationEntryPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    		  &lt;span class=&quot;s&quot;&gt;&quot;/login&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//인증의 진입 지점 인증되지 않은 사용자가 허용되지 않은 경로로 리퀘스트 요청하면 /login으로 이동 &lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;formLogin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    		&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;successForwardUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/board/list&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 로그인에 성공하면 설정된 경로로 포워딩 &lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    		&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logoutUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/logout&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
    		&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logoutSuccessUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    		&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteCookies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JSESSIONID&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 로그아웃시에 쿠키 값 삭제 &lt;/span&gt;
    		&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invalidateHttpSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 세션무효화 &lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    	  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addFilterBefore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CsrfFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//첫번째 인자보다 먼저 시작될 필터를 등록 &lt;/span&gt;
    		  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;csrf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그레이들에서 의존성 관리 제어를 위한 플러그인&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apply plugin: 'io.spring.dependency-management'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 10 Jun 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//springboot2-summary</link>
        <link href="http://localhost:4000/springboot2-summary"/>
        <guid isPermaLink="true">http://localhost:4000/springboot2-summary</guid>
      </item>
    
      <item>
        <title>그레이들 래퍼</title>
        <description>&lt;h1 id=&quot;그레이들-래퍼-설정방법&quot;&gt;그레이들 래퍼 설정방법&lt;/h1&gt;

&lt;p&gt;그레이들 설정 관련 기본 구조&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/2019/03/10/2019-03-10-gradle-wrapper-01.jpeg&quot; alt=&quot;GRADLE-WRAPPER1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;설정-파일-용도&quot;&gt;설정 파일 용도&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;gradlew : 리눅스 및 맥 OS용 셀 스크립트&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;gradlew.bat : 윈도우용 배치 스크립트&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;gradle/wrapper/gradle-wrapper.jar : Wrapper JAR&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;gradle/wrapper/gradle-wrapper.properties : 그레이들 설정 정보 프로퍼티 파일(버전 정보)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;그레이들-버전-올리는-방법&quot;&gt;그레이들 버전 올리는 방법&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$./gradle wrapper --gradle-version 4.8.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/2019/03/10/2019-03-10-gradle-wrapper-02.jpeg&quot; alt=&quot;GRADLE-WRAPPER2&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 10 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//gradle-wrapper</link>
        <link href="http://localhost:4000/gradle-wrapper"/>
        <guid isPermaLink="true">http://localhost:4000/gradle-wrapper</guid>
      </item>
    
      <item>
        <title>QueryDSL Projections.bean</title>
        <description>&lt;p&gt;쿼리 결과를 엔티티가 아닌 특정한 자바객체(DTO, VO)로 받고 싶은 경우 Pjojections를 사용하면 되는데 .bean()을 사용하면 Setter로 값을 채우고 .field()라고 하면 필드(멤버변수)에 직접 접근하여 값을 채우며, .constructor() 라고 하면 생성자를 통해 값을 채운다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Projections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;OrderRefundProcDTO_orderProduct_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_orderProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;orderProductId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_orderProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orderStatusCd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;orderStatusCd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_orderProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;orderCancellationCd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;orderCancellationCd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_orderProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;deliveryType&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_orderProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;price&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_orderProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;quantity&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;supplierName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_productGoods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;productGoodsId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;productId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;productName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_productMeta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;representImageUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;productImage&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;supplierId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;$q_orderProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deliveryCharge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;deliveryCharge&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 15 Jan 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//querydsl-projections-bean</link>
        <link href="http://localhost:4000/querydsl-projections-bean"/>
        <guid isPermaLink="true">http://localhost:4000/querydsl-projections-bean</guid>
      </item>
    
      <item>
        <title>mybatis muliti update 하려면!</title>
        <description>&lt;p&gt;mybatis muliti update 하려면~!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;update id=&quot;Mapper메서드명&quot; parameterType=&quot;java.util.List&quot;&amp;gt;
   &amp;lt;foreach item=&quot;temp&quot; index=&quot;index&quot; collection=&quot;list&quot; open=&quot;&quot; close=&quot;&quot; separator=&quot;;&quot;&amp;gt;
      UPDATE 테이블
      SET 컬럼 = #{temp.test1}
      WHERE 컬럼 = #{temp.test2}
   &amp;lt;/foreach&amp;gt;
&amp;lt;/update&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service nginx start

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;application.yml에서&lt;/p&gt;

&lt;p&gt;jdbc.allowMultiQueries=true&lt;/p&gt;

&lt;p&gt;되어 있어야 멀티업데이트가 된다.&lt;/p&gt;

&lt;p&gt;요즘엔 JPA로 하고 있어서 잘안쓰지만 예전에 한참 Mybatis를 이용해서 플젝했을때는 종종쓴거 같다~&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//mybatis-muliti-update</link>
        <link href="http://localhost:4000/mybatis-muliti-update"/>
        <guid isPermaLink="true">http://localhost:4000/mybatis-muliti-update</guid>
      </item>
    
      <item>
        <title>Crontab 크론탭 시작/중지/재시작</title>
        <description>&lt;p&gt;크론탭 시작&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service crond start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;크론탭 중지&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service crond stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;크론탭 재시작&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service crond restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;크론탭 설치여부 확인(피드백이 있다면 설치되어있는거임.)&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps -ef | grep cron
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 02 Nov 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//crontab-restart-start-stop</link>
        <link href="http://localhost:4000/crontab-restart-start-stop"/>
        <guid isPermaLink="true">http://localhost:4000/crontab-restart-start-stop</guid>
      </item>
    
      <item>
        <title>SpringBoot Session 유지 시간</title>
        <description>&lt;p&gt;application.properties 파일에&lt;/p&gt;

&lt;p&gt;server.session.timeout=14400. //4시간동안 유지&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Oct 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//springboot-session-time-yml</link>
        <link href="http://localhost:4000/springboot-session-time-yml"/>
        <guid isPermaLink="true">http://localhost:4000/springboot-session-time-yml</guid>
      </item>
    
      <item>
        <title>ELB Classic Load Blancer에서 리스너 nginx proxy 같은 기능</title>
        <description>&lt;p&gt;로드밸런서에 하위 탭보면 됨&lt;/p&gt;

&lt;p&gt;저기서 편집에서 추가하면됨 로드밸런서 권한필요&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/imgs/2018/10/08/2018-10-08.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Oct 2018 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//elb-classic-load-blancer-nginx-proxy</link>
        <link href="http://localhost:4000/elb-classic-load-blancer-nginx-proxy"/>
        <guid isPermaLink="true">http://localhost:4000/elb-classic-load-blancer-nginx-proxy</guid>
      </item>
    
  </channel>
</rss>
